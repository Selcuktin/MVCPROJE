# Generated by Django 4.2.7 on 2025-10-09 19:09

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '__first__'),
        ('teachers', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('credits', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('description', models.TextField()),
                ('department', models.CharField(max_length=100)),
                ('semester', models.CharField(choices=[('fall', 'Güz'), ('spring', 'Bahar'), ('summer', 'Yaz')], max_length=10)),
                ('capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('is_elective', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('active', 'Aktif'), ('inactive', 'Pasif'), ('archived', 'Arşivlenmiş')], default='active', max_length=20)),
            ],
            options={
                'verbose_name': 'Ders',
                'verbose_name_plural': 'Dersler',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='CourseGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='A', max_length=50)),
                ('semester', models.CharField(max_length=20)),
                ('classroom', models.CharField(max_length=50)),
                ('schedule', models.CharField(help_text='Ör: Pazartesi 09:00-12:00', max_length=200)),
                ('status', models.CharField(choices=[('active', 'Aktif'), ('inactive', 'Pasif'), ('completed', 'Tamamlandı')], default='active', max_length=20)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='courses.course')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_groups', to='teachers.teacher')),
            ],
            options={
                'verbose_name': 'Ders Grubu',
                'verbose_name_plural': 'Ders Grupları',
                'unique_together': {('course', 'teacher', 'semester')},
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('file_url', models.FileField(blank=True, null=True, upload_to='assignments/')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField()),
                ('max_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('active', 'Aktif'), ('inactive', 'Pasif'), ('expired', 'Süresi Dolmuş')], default='active', max_length=20)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='courses.coursegroup')),
            ],
            options={
                'verbose_name': 'Ödev',
                'verbose_name_plural': 'Ödevler',
                'ordering': ['-create_date'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('expire_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Aktif'), ('inactive', 'Pasif'), ('expired', 'Süresi Dolmuş')], default='active', max_length=20)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='courses.coursegroup')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='teachers.teacher')),
            ],
            options={
                'verbose_name': 'Duyuru',
                'verbose_name_plural': 'Duyurular',
                'ordering': ['-create_date'],
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('file_url', models.FileField(upload_to='submissions/')),
                ('score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('feedback', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('submitted', 'Teslim Edildi'), ('graded', 'Notlandırıldı'), ('late', 'Geç Teslim')], default='submitted', max_length=20)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='courses.assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='students.student')),
            ],
            options={
                'verbose_name': 'Teslim',
                'verbose_name_plural': 'Teslimler',
                'unique_together': {('assignment', 'student')},
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateTimeField(auto_now_add=True)),
                ('attendance', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('midterm_grade', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Vize Notu')),
                ('final_grade', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Final Notu')),
                ('makeup_grade', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Büt Notu')),
                ('project_grade', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Proje Notu')),
                ('grade', models.CharField(choices=[('AA', 'AA'), ('BA', 'BA'), ('BB', 'BB'), ('CB', 'CB'), ('CC', 'CC'), ('DC', 'DC'), ('DD', 'DD'), ('FF', 'FF'), ('NA', 'Henüz Değerlendirilmedi')], default='NA', max_length=2)),
                ('status', models.CharField(choices=[('enrolled', 'Kayıtlı'), ('dropped', 'Bıraktı'), ('completed', 'Tamamladı'), ('failed', 'Başarısız')], default='enrolled', max_length=20)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='courses.coursegroup')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='students.student')),
            ],
            options={
                'verbose_name': 'Kayıt',
                'verbose_name_plural': 'Kayıtlar',
                'unique_together': {('student', 'group')},
            },
        ),
    ]
